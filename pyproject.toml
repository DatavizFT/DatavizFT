# Configuration du projet DatavizFT
[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dataviz-ft"
version = "0.1.0"
description = "DatavizFT - Visualisation et analyse des données France Travail"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "DatavizFT Team"}
]
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.10.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0", 
    "mypy>=1.5.0",
    "vulture>=2.7",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]
mongodb = [
    "pymongo>=4.5.0",
    "motor>=3.3.0",
]

# Configuration des packages à inclure
[tool.setuptools.packages.find]
where = ["."]
include = ["backend*"]
exclude = ["data*", "docs*", "frontend*", "sandbox*", "tests*", ".github*"]

[tool.ruff]
# Configuration Ruff - Linter Python moderne et rapide
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "F401", # unused imports
    "F841", # unused variables
    "ARG001", # unused function arguments
    "ARG002", # unused method arguments
    "PLR0913", # too many arguments
    "C901", # complex functions
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.black]
# Configuration Black - Code formatter
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
# Configuration MyPy - Type checker (mode permissif pour CI)
python_version = "3.11"
warn_unused_configs = true
# Configuration permissive pour éviter échec CI
disallow_untyped_defs = false  # Permet fonctions sans annotations
disallow_incomplete_defs = false  # Permet annotations partielles  
check_untyped_defs = true
disallow_untyped_decorators = false  # Permet decorateurs sans types
no_implicit_optional = false  # Permet None implicite
warn_redundant_casts = true
warn_unused_ignores = false  # Ne warn pas les ignores inutiles
warn_no_return = false  # Permet return manquants
warn_unreachable = false  # Permet code unreachable
strict_equality = false  # Mode moins strict

# Ignore des modules sans types
[[tool.mypy.overrides]]
module = [
    "httpx.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
# Configuration PyTest
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=backend",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--strict-markers",
    "-v"
]