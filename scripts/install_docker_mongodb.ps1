# =============================================================================
# Installation Docker Desktop pour DatavizFT MongoDB
# =============================================================================

Write-Host "üê≥ Installation Docker Desktop pour DatavizFT" -ForegroundColor Green
Write-Host "============================================" -ForegroundColor Green

# V√©rifier si Docker est d√©j√† install√©
try {
    $dockerVersion = & docker --version 2>$null
    if ($dockerVersion) {
        Write-Host "‚úÖ Docker d√©j√† install√©: $dockerVersion" -ForegroundColor Green
        
        # V√©rifier si Docker est en cours d'ex√©cution
        try {
            & docker info > $null 2>&1
            Write-Host "‚úÖ Docker Engine fonctionne" -ForegroundColor Green
            
            Write-Host "`nüöÄ D√©marrage MongoDB avec persistance..." -ForegroundColor Yellow
            & docker compose up -d mongodb mongo-express
            
            Write-Host "‚úÖ MongoDB d√©marr√© avec persistance!" -ForegroundColor Green
            Write-Host "üìä Interface: http://localhost:8081 (datavizft / admin123)" -ForegroundColor Cyan
            Write-Host "üîó Connexion: mongodb://admin:datavizft2025@localhost:27017/dataviz_ft_dev?authSource=admin" -ForegroundColor Cyan
            
            exit 0
        }
        catch {
            Write-Host "‚ö†Ô∏è  Docker install√© mais Engine arr√™t√©" -ForegroundColor Yellow
            Write-Host "   D√©marrez Docker Desktop puis relancez ce script" -ForegroundColor Cyan
        }
    }
}
catch {
    Write-Host "üì• Docker non d√©tect√©, installation n√©cessaire..." -ForegroundColor Yellow
}

Write-Host ""
Write-Host "M√©thodes d'installation Docker:" -ForegroundColor Cyan
Write-Host "1. üç´ Chocolatey (Automatique)" -ForegroundColor White
Write-Host "2. üì• T√©l√©chargement manuel Docker Desktop" -ForegroundColor White
Write-Host "3. üè† Installation MongoDB locale (sans Docker)" -ForegroundColor White

$choice = Read-Host "`nEntrez votre choix (1-3)"

switch ($choice) {
    "1" {
        Write-Host "`nüç´ Installation Docker via Chocolatey..." -ForegroundColor Green
        
        # V√©rifier Chocolatey
        try {
            & choco --version > $null 2>&1
            Write-Host "‚úÖ Chocolatey d√©tect√©" -ForegroundColor Green
        }
        catch {
            Write-Host "üì• Installation de Chocolatey..." -ForegroundColor Yellow
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        }
        
        # Installer Docker Desktop
        Write-Host "üê≥ Installation Docker Desktop..." -ForegroundColor Yellow
        & choco install docker-desktop -y
        
        Write-Host "‚ö†Ô∏è  IMPORTANT:" -ForegroundColor Red
        Write-Host "   1. Red√©marrez votre ordinateur" -ForegroundColor Cyan
        Write-Host "   2. Lancez Docker Desktop" -ForegroundColor Cyan
        Write-Host "   3. Relancez ce script" -ForegroundColor Cyan
    }
    
    "2" {
        Write-Host "`nüì• Installation manuelle Docker Desktop..." -ForegroundColor Green
        Write-Host "1. Allez sur: https://www.docker.com/products/docker-desktop/" -ForegroundColor Cyan
        Write-Host "2. T√©l√©chargez Docker Desktop pour Windows" -ForegroundColor Cyan
        Write-Host "3. Installez et red√©marrez votre ordinateur" -ForegroundColor Cyan
        Write-Host "4. Lancez Docker Desktop" -ForegroundColor Cyan
        Write-Host "5. Revenez ici et relancez ce script" -ForegroundColor Cyan
        
        Read-Host "`nAppuyez sur Entr√©e apr√®s l'installation..."
    }
    
    "3" {
        Write-Host "`nüè† Installation MongoDB locale..." -ForegroundColor Green
        Write-Host "Lancement du script d'installation MongoDB..." -ForegroundColor Yellow
        & powershell -ExecutionPolicy Bypass -File scripts/install_mongodb.ps1
    }
    
    default {
        Write-Host "‚ùå Choix invalide. Relancez le script." -ForegroundColor Red
        exit 1
    }
}

Write-Host "`nüìä Comparaison des options de persistance:" -ForegroundColor Yellow
Write-Host "==========================================" -ForegroundColor Yellow
Write-Host "üê≥ Docker Desktop:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Persistance garantie (volumes)" -ForegroundColor Green
Write-Host "   ‚úÖ Isolation et reproductibilit√©" -ForegroundColor Green
Write-Host "   ‚úÖ Interface Mongo Express incluse" -ForegroundColor Green
Write-Host "   ‚ö†Ô∏è  N√©cessite Docker Desktop" -ForegroundColor Yellow
Write-Host ""
Write-Host "üè† MongoDB Local:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Persistance native sur disque" -ForegroundColor Green
Write-Host "   ‚úÖ Performance maximale" -ForegroundColor Green
Write-Host "   ‚úÖ Contr√¥le total" -ForegroundColor Green
Write-Host "   ‚ö†Ô∏è  Configuration manuelle" -ForegroundColor Yellow
Write-Host ""
Write-Host "‚òÅÔ∏è  MongoDB Atlas:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Sauvegarde automatique cloud" -ForegroundColor Green
Write-Host "   ‚úÖ Haute disponibilit√©" -ForegroundColor Green
Write-Host "   ‚úÖ Pas d'installation" -ForegroundColor Green
Write-Host "   ‚ö†Ô∏è  Limite 512MB gratuit" -ForegroundColor Yellow